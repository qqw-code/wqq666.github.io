题目：输入一个非负整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。

示例 1:
输入: [10,2]
输出: "102"

示例 2:
输入: [3,30,34,5,9]
输出: "3033459"

提示:
	0 < nums.length <= 100


说明: 
	输出结果可能非常大，所以你需要返回一个字符串而不是整数
	拼接起来的数字可能会有前导 0，最后结果不需要去掉前导 0
  
代码：
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int main()
{
	int n,i,j,temp;
	printf("please input the length of a[]:\n");
	scanf("%d",&n);

	int* a=(int*)malloc(n*sizeof(int));         //为整型数组a和字符型数组c动态分配内存
	char* c=(char*)malloc(n*sizeof(char));

	if(a==NULL){
		printf("Not able to allocate memory.\n");
		exit(1);
	}
	printf("please input intergers:\n");
	for(i=0;i<n;i++)
		scanf("%d",(a+i));

	for(i=0;i<n-1;i++){
		for(j=i+1;j<n;j++){
			if(a[i]>a[j]){
				temp=a[i];
				a[i]=a[j];
				a[j]=temp;
			}
		}
	}
	for(i=0;i<n;i++)
		printf("%s",itoa(*(a+i),(c+i),10));       //这里我用了一个函数，将整数转化为字符型
	printf("\n");

	return 0;
}

